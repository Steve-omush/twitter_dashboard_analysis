# In this file, shall include all the code I initially used but had to change

import streamlit as st

# Title of the app
st.title('My Streamlit App')

# Subheader
st.subheader('Subtitle here')

# Text
st.write('Hello, world!')

# Markdown
st.markdown('**Markdown** is also supported.')

# Displaying data
import pandas as pd
df = pd.DataFrame({
    'Column 1': [1, 2, 3, 4],
    'Column 2': [10, 20, 30, 40],
    'Column 3': [100, 200, 300, 400]
})
st.write(df)

# Interactive widgets
user_input = st.text_input('Enter some text', 'Type here...')
st.write('You entered:', user_input)

# Button
if st.button('Click me'):
    st.write('Button clicked!')

# Checkbox
checkbox_state = st.checkbox('Check me out')
if checkbox_state:
    st.write('Checkbox checked!')

# Selectbox
option = st.selectbox('Select a number', [1, 2, 3])
st.write('You selected:', option)

# Slider
slider_value = st.slider('Slide me', 0, 100, 50)
st.write('Slider value:', slider_value)

# File uploader
uploaded_file = st.file_uploader('Upload a file')
if uploaded_file is not None:
    st.write('File uploaded:', uploaded_file)


# Adding columns
col1, col2 = st.columns(2)
with col1:
    st.write('This is column 1')
with col2:
    st.write('This is column 2')

# Expander
with st.expander('Expand'):
    st.write('Content inside the expander')

# Progress bar
import time
progress_bar = st.progress(0)
for i in range(100):
    progress_bar.progress(i + 1)
    time.sleep(0.1)

# Sidebar
st.sidebar.title('Sidebar title')
st.sidebar.write('Content in the sidebar')

# Displaying code
code = '''
def hello():
    print("Hello, world!")
'''
st.code(code, language='python')




# Getting User Details on a clicked Pie Chart



    # Add a click event handler to the pie chart
    if st.session_state.clicked_user:
        st.write(f"Details of {st.session_state.clicked_user}:")

# Define the user details page
@app.add_page("User Details")
def show_user_details(username=None):
    if username is not None:
        user_details = get_user_details(username)

        # Display user details using Streamlit elements
        st.header(f"Details for User: {user_details['Name']}")
        st.text(f"User Name: {user_details['Username']}")
        st.text(f"Client: {user_details['Client']}")

def get_user_details(username):
    user_data = format_df[format_df['Username'] == username].iloc[0]
    return {
        'Name': user_data['Name'],
        'Username': user_data['Username'],
        'Client': user_data['Client']
    }

if st.session_state.clicked_user:
    show_user_details(st.session_state.clicked_user)